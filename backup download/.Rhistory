hf3<-simpson(f3, 0, 2, 0.5, 4)
#x=3
f4<-function (y){(return (3^2*y^3-3*y))}
hf4<-simpson(f4, 0, 2, 0.5, 4)
hasil <- (0.5/3)*(hf0+(4*(hf1+hf3))+(2*hf2)+hf4); hasil
#Script Awal
trapesium <- function(f,a,b,h,n){
sum<-0
x<-0
for(i in 1:(n-1)){
x<-x+h
sum<-sum+f(x)
}
sum<-(h/2)*(f(a)+(2*sum)+f(b))
sum
}
simpson<-function(f,a,b,h,n){
odd<-0
even<-0
sum<-0
x<-0
for(i in 1:(n-1)){
x<-x+h
if(i%%2 == 1){
odd<-odd+f(x)
}
else even<-even+f(x)
}
sum<-(h/3)*(f(a)+4*odd+2*even+f(b))
sum
}
##kaidah simpson
#x=1
f0<-function (y){(return (1^2*y^3-1*y))}
hf0<-simpson(f0, 0, 2, 0.5, 4)
#x=1.5
f1<-function (y){(return (1.5^2*y^3-1.5*y))}
hf1<-simpson(f1, 0, 2, 0.5, 4)
#x=2
f2<-function (y){(return (2^2*y^3-2*y))}
hf2<-simpson(f2, 0, 2, 0.5, 4)
#x=2.5
f3<-function (y){(return (2.5^2*y^3-2.5*y))}
hf3<-simpson(f3, 0, 2, 0.5, 4)
#x=3
f4<-function (y){(return (3^2*y^3-3*y))}
hf4<-simpson(f4, 0, 2, 0.5, 4)
hasil <- (0.5/3)*(hf0+(4*(hf1+hf3))+(2*hf2)+hf4); hasil
#dengan menggunakan kaidah trapesium
#meunuju arah y, delta y,x = 0.5
#x=1
f0<-function (y){(return (1^2*y^3-1*y))}
hf0<-simpson(f0, 0, 2, 0.5, 4)
#x=1.5
f1<-function (y){(return (1.5^2*y^3-1.5*y))}
hf1<-simpson(f1, 0, 2, 0.5, 4)
#x=2
f2<-function (y){(return (2^2*y^3-2*y))}
hf2<-simpson(f2, 0, 2, 0.5, 4)
#x=2.5
f3<-function (y){(return (2.5^2*y^3-2.5*y))}
hf3<-simpson(f3, 0, 2, 0.5, 4)
#x=3
f4<-function (y){(return (3^2*y^3-3*y))}
hf4<-simpson(f4, 0, 2, 0.5, 4)
hasil <- (0.5/2)*(hf0+(2*(hf1+hf2+hf3))+hf4); hasil
#Script Awal
trapesium <- function(f,a,b,h,n){
sum<-0
x<-0
for(i in 1:(n-1)){
x<-x+h
sum<-sum+f(x)
}
sum<-(h/2)*(f(a)+(2*sum)+f(b))
sum
}
simpson<-function(f,a,b,h,n){
odd<-0
even<-0
sum<-0
x<-0
for(i in 1:(n-1)){
x<-x+h
if(i%%2 == 1){
odd<-odd+f(x)
}
else even<-even+f(x)
}
sum<-(h/3)*(f(a)+4*odd+2*even+f(b))
sum
}
##kaidah simpson
#x=1
f0<-function (y){(return (1^2*y^3-1*y))}
hf0<-simpson(f0, 0, 2, 0.5, 4)
#x=1.5
f1<-function (y){(return (1.5^2*y^3-1.5*y))}
hf1<-simpson(f1, 0, 2, 0.5, 4)
#x=2
f2<-function (y){(return (2^2*y^3-2*y))}
hf2<-simpson(f2, 0, 2, 0.5, 4)
#x=2.5
f3<-function (y){(return (2.5^2*y^3-2.5*y))}
hf3<-simpson(f3, 0, 2, 0.5, 4)
#x=3
f4<-function (y){(return (3^2*y^3-3*y))}
hf4<-simpson(f4, 0, 2, 0.5, 4)
hasil <- (0.5/3)*(hf0+(4*(hf1+hf3))+(2*hf2)+hf4); hasil
#dengan menggunakan kaidah trapesium
#meunuju arah y, delta y,x = 0.5
#x=1
f0<-function (y){(return (1^2*y^3-1*y))}
hf0<-trapesium(f0, 0, 2, 0.5, 4)
#x=1.5
f1<-function (y){(return (1.5^2*y^3-1.5*y))}
hf1<-trapesium(f1, 0, 2, 0.5, 4)
#x=2
f2<-function (y){(return (2^2*y^3-2*y))}
hf2<-trapesium(f2, 0, 2, 0.5, 4)
#x=2.5
f3<-function (y){(return (2.5^2*y^3-2.5*y))}
hf3<-trapesium(f3, 0, 2, 0.5, 4)
#x=3
f4<-function (y){(return (3^2*y^3-3*y))}
hf4<-trapesium(f4, 0, 2, 0.5, 4)
hasil <- (0.5/2)*(hf0+(2*(hf1+hf2+hf3))+hf4); hasil
#Script Awal
trapesium <- function(f,a,b,h,n){
sum<-0
x<-0
for(i in 1:(n-1)){
x<-x+h
sum<-sum+f(x)
}
sum<-(h/2)*(f(a)+(2*sum)+f(b))
sum
}
simpson<-function(f,a,b,h,n){
odd<-0
even<-0
sum<-0
x<-0
for(i in 1:(n-1)){
x<-x+h
if(i%%2 == 1){
odd<-odd+f(x)
}
else even<-even+f(x)
}
sum<-(h/3)*(f(a)+4*odd+2*even+f(b))
sum
}
##kaidah simpson
#x=1
f0<-function (y){(return (1^2*y^3-1*y))}
hf0<-simpson(f0, 0, 2, 0.5, 4)
#x=1.5
f1<-function (y){(return (1.5^2*y^3-1.5*y))}
hf1<-simpson(f1, 0, 2, 0.5, 4)
#x=2
f2<-function (y){(return (2^2*y^3-2*y))}
hf2<-simpson(f2, 0, 2, 0.5, 4)
#x=2.5
f3<-function (y){(return (2.5^2*y^3-2.5*y))}
hf3<-simpson(f3, 0, 2, 0.5, 4)
#x=3
f4<-function (y){(return (3^2*y^3-3*y))}
hf4<-simpson(f4, 0, 2, 0.5, 4)
hasil <- (0.5/3)*(hf0+(4*(hf1+hf3))+(2*hf2)+hf4); hasil
#dengan menggunakan kaidah trapesium
#meunuju arah y, delta y,x = 0.5
#x=1
f0<-function (y){(return (1^2*y^3-1*y))}
hf0<-trapesium(f0, 0, 2, 0.5, 4)
#x=1.5
f1<-function (y){(return (1.5^2*y^3-1.5*y))}
hf1<-trapesium(f1, 0, 2, 0.5, 4)
#x=2
f2<-function (y){(return (2^2*y^3-2*y))}
hf2<-trapesium(f2, 0, 2, 0.5, 4)
#x=2.5
f3<-function (y){(return (2.5^2*y^3-2.5*y))}
hf3<-trapesium(f3, 0, 2, 0.5, 4)
#x=3
f4<-function (y){(return (3^2*y^3-3*y))}
hf4<-trapesium(f4, 0, 2, 0.5, 4)
hasil <- (0.5/2)*(hf0+(2*(hf1+hf2+hf3))+hf4); hasil
##kaidah simpson
#x=1
f0<-function (y){(return (1^2*y^3-1*y))}
hf0<-simpson(f0, 0, 2, 0.5, 4)
#x=1.5
f1<-function (y){(return (1.5^2*y^3-1.5*y))}
hf1<-simpson(f1, 0, 2, 0.5, 4)
#x=2
f2<-function (y){(return (2^2*y^3-2*y))}
hf2<-simpson(f2, 0, 2, 0.5, 4)
#x=2.5
f3<-function (y){(return (2.5^2*y^3-2.5*y))}
hf3<-simpson(f3, 0, 2, 0.5, 4)
#x=3
f4<-function (y){(return (3^2*y^3-3*y))}
hf4<-simpson(f4, 0, 2, 0.5, 4)
hasil <- (0.5/2)*(hf0+(2*(hf1+hf2+hf3))+hf4); hasil
#Script Awal
trapesium <- function(f,a,b,h,n){
sum<-0
x<-0
for(i in 1:(n-1)){
x<-x+h
sum<-sum+f(x)
}
sum<-(h/2)*(f(a)+(2*sum)+f(b))
sum
}
simpson<-function(f,a,b,h,n){
odd<-0
even<-0
sum<-0
x<-0
for(i in 1:(n-1)){
x<-x+h
if(i%%2 == 1){
odd<-odd+f(x)
}
else even<-even+f(x)
}
sum<-(h/3)*(f(a)+4*odd+2*even+f(b))
sum
}
##kaidah simpson
#x=1
f0<-function (y){(return (1^2*y^3-1*y))}
hf0<-simpson(f0, 0, 2, 0.5, 4)
#x=1.5
f1<-function (y){(return (1.5^2*y^3-1.5*y))}
hf1<-simpson(f1, 0, 2, 0.5, 4)
#x=2
f2<-function (y){(return (2^2*y^3-2*y))}
hf2<-simpson(f2, 0, 2, 0.5, 4)
#x=2.5
f3<-function (y){(return (2.5^2*y^3-2.5*y))}
hf3<-simpson(f3, 0, 2, 0.5, 4)
#x=3
f4<-function (y){(return (3^2*y^3-3*y))}
hf4<-simpson(f4, 0, 2, 0.5, 4)
hasil <- (0.5/3)*(hf0+(4*(hf1+hf3))+(2*hf2)+hf4); hasil
#dengan menggunakan kaidah trapesium
#meunuju arah y, delta y,x = 0.5
#x=1
f0<-function (y){(return (1^2*y^3-1*y))}
hf0<-trapesium(f0, 0, 2, 0.5, 4)
#x=1.5
f1<-function (y){(return (1.5^2*y^3-1.5*y))}
hf1<-trapesium(f1, 0, 2, 0.5, 4)
#x=2
f2<-function (y){(return (2^2*y^3-2*y))}
hf2<-trapesium(f2, 0, 2, 0.5, 4)
#x=2.5
f3<-function (y){(return (2.5^2*y^3-2.5*y))}
hf3<-trapesium(f3, 0, 2, 0.5, 4)
#x=3
f4<-function (y){(return (3^2*y^3-3*y))}
hf4<-trapesium(f4, 0, 2, 0.5, 4)
hasil <- (0.5/2)*(hf0+(2*(hf1+hf2+hf3))+hf4); hasil
##kaidah simpson
#x=1
f0<-function (y){(return (1^2*y^3-1*y))}
hf0<-simpson(f0, 0, 2, 0.5, 4)
#x=1.5
f1<-function (y){(return (1.5^2*y^3-1.5*y))}
hf1<-simpson(f1, 0, 2, 0.5, 4)
#x=2
f2<-function (y){(return (2^2*y^3-2*y))}
hf2<-simpson(f2, 0, 2, 0.5, 4)
#x=2.5
f3<-function (y){(return (2.5^2*y^3-2.5*y))}
hf3<-simpson(f3, 0, 2, 0.5, 4)
#x=3
f4<-function (y){(return (3^2*y^3-3*y))}
hf4<-simpson(f4, 0, 2, 0.5, 4)
hasil <- (0.5/2)*(hf0+(2*(hf1+hf2+hf3))+hf4); hasil
#dengan menggunakan kaidah trapesium
#meunuju arah y, delta y,x = 0.5
#x=1
f0<-function (y){(return (1^2*y^3-1*y))}
hf0<-trapesium(f0, 0, 2, 0.5, 4)
#x=1.5
f1<-function (y){(return (1.5^2*y^3-1.5*y))}
hf1<-trapesium(f1, 0, 2, 0.5, 4)
#x=2
f2<-function (y){(return (2^2*y^3-2*y))}
hf2<-trapesium(f2, 0, 2, 0.5, 4)
#x=2.5
f3<-function (y){(return (2.5^2*y^3-2.5*y))}
hf3<-trapesium(f3, 0, 2, 0.5, 4)
#x=3
f4<-function (y){(return (3^2*y^3-3*y))}
hf4<-trapesium(f4, 0, 2, 0.5, 4)
hasil <- (0.5/3)*(hf0+(4*(hf1+hf3))+(2*hf2)+hf4); hasil
library(gaussquad)
install.packages("gaussquad")
library(gaussquad)
f <- function(x){
(2*x + 3)*exp(x)
}
rule <- legendre.quadrature.rules(2)[[2]]
legendre.quadrature(f, rule, lower=2, upper=5)
library(SciViews)
library(Deriv)
f <- function(x){
ln(x^3 - x + 1) }
selisih_maju <- function(f, i, h){
ans = (f(i+h) - f(i))/(h)
return(ans)
}
selisih_mundur <- function(f, i, h){
ans = (f(i) - f(i-h))/(h)
return(ans)
}
selisih_pusat <- function(f, i, h){
ans = (f(i+h) - f(i-h))/(2*h)
return(ans)
}
d_f = Deriv(f)
d_f1 = d_f(1)
h = 0.1
for (i in 1:4) {
#Untuk h =
print(h)
s_maju = selisih_maju(f,1,h); print(s_maju)
s_mundur = selisih_mundur(f,1,h); print(s_mundur)
s_pusat = selisih_pusat(f,1,h); print(s_pusat)
galat_s_maju = abs(d_f1-s_maju)
print(galat_s_maju)
galat_s_mundur = abs(d_f1-s_mundur)
print(galat_s_mundur)
galat_s_pusat = abs(d_f1-s_pusat)
print(galat_s_pusat)
h <- h*0.1
}
for (i in 1:4) {
#Untuk h =
print(h)
s_maju = selisih_maju(f,1,h); print(s_maju)
s_mundur = selisih_mundur(f,1,h); print(s_mundur)
s_pusat = selisih_pusat(f,1,h); print(s_pusat)
galat_s_maju = abs(d_f1-s_maju)
print(galat_s_maju)
galat_s_mundur = abs(d_f1-s_mundur)
print(galat_s_mundur)
galat_s_pusat = abs(d_f1-s_pusat)
print(galat_s_pusat)
h <- h*0.1
}
m <- matrix(1:16, 2, byrow=TRUE)
m[2,3]
m1 = matrix(1:4, 2, byrow=TRUE)
m2 = matrix(11:14, 2)
m1m2 = m1%*%m2
m1m2[1,1]
dataset <- read.csv("C:/MyFolder/.Aipibi/.SEMS 4/METKUAN/praktikum/minngu 8/Soal Laporan 8.csv")
View(dataset)
library(PerformanceAnalytics)
chart.Correlation(dataset)
install.packages("PerformanceAnalytics")
chart.Correlation(dataset)
library(PerformanceAnalytics)
chart.Correlation(dataset)
datalkp <- dataset[,c(2:10)]
str(datalkp)
datalkp <- dataset[,c(2:10)]
str(datalkp)
#menghitung matrik kovarian
cov(datalkp)
#menghitung nilai eigen dan vektor eigen
eigen(cov(datalkp))
data.pca <- prcomp(datalkp, center=TRUE, scale. = TRUE)
summary(data.pca)
pcnya <- predict(data.pca, newdata=datalkp)
head(pcnya)
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(data.pca$x)
install.packages("PerformanceAnalytics")
datalkp <- dataset[,c(2:10)]
str(datalkp)
#menghitung matrik kovarian
cov(datalkp)
#menghitung nilai eigen dan vektor eigen
eigen(cov(datalkp))
data.pca <- prcomp(datalkp, center=TRUE, scale. = TRUE)
summary(data.pca)
pcnya <- predict(data.pca, newdata=datalkp)
head(pcnya)
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(data.pca$x)
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(dataset)
install.packages("PerformanceAnalytics")
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(dataset)
install.packages("PerformanceAnalytics")
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(dataset)
library(PerformanceAnalytics)
str(dataset)
RawData <- lkp8[,c(2:10)]
library(PerformanceAnalytics)
str(dataset)
RawData <- dataset[,c(2:10)]
str(RawData)
chart.Correlation(RawData)
warnings()
library(PerformanceAnalytics)
str(dataset)
RawData <- dataset[,c(2:10)]
str(RawData)
chart.Correlation(RawData)
NilaiKovarianData <- round(cov(RawData),digits=3)
NilaiKovarianData
eigen(NilaiKovarianData)
data.pca <- prcomp(RawData, center=TRUE,scale.=TRUE)
summary(data.pca)
pcnya <- predict(data.pca,newdata=RawData)
pcnya <- round(pcnya,digits=4)
head(pcnya)
chart.Correlation(data.pca$x)
DataKecamatan <- lkp8[,c(1:1)]
DataKecamatan <- dataset[,c(1:1)]
RawData_TelahDiolah <- cbind(DataKecamatan,round(pcnya,digits=5))
View(RawData_TelahDiolah)
install.packages("ggplot2")
install.packages("factoextra")
install.packages("car")
install.packages("cluster")
install.packages("dendextend")
install.packages("devtools")
install.packages("ggbiplot")
#menyiapkan dependencies
library(devtools)
install_github("vqv/ggbiplot")
#menginput dataset ke R
setwd("C:\Users\halid\Dropbox\PC\Downloads")
CountryData <- read.csv("C:/Users/halid/Dropbox/PC/Downloads/Country-data.csv")
View(CountryData)
view(CountryData)
view(CountryData)
View(CountryData)
ford <- read.csv("C:/MyFolder/.Aipibi/.SEMS 4/METKUAN/praktikum/minggu 9/ford.csv")
View(ford)
datalkp <- CountryData[c(2:167), c(2:10)]
CountryData.pca <- prcomp(datalkp, center = TRUE, scale = TRUE)
summary(CountryData.pca)
datalkp <- CountryData[c(2:167), c(2:10)]
CountryData.pca <- prcomp(datalkp, center = TRUE, scale = TRUE)
summary(CountryData.pca)
datalkp <- CountryData[c(2:167), c(2:10)]
CountryData.pca <- prcomp(datalkp, center = TRUE, scale = TRUE)
summary(CountryData.pca)
biplot (CountryData.pca, scale = 0, xlabs = rep(2:167))
datalkp <- CountryData[c(2:167), c(2:10)]
CountryData.pca <- prcomp(datalkp, center = TRUE, scale = TRUE)
summary(CountryData.pca)
biplot (CountryData.pca, scale = 0, xlabs = rep(2:167))
#Membaca data
data <- read.csv("Country-data.csv")
#Membaca data
setwd("C:\Users\halid\Dropbox\PC\Downloads")
#menyiapkan dependencies
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
#menginput dataset ke R
setwd("C:/Users/halid/Dropbox/PC/Downloads")
data <- read.csv("Country-data.csv")
#ambil 50 data secara acak
newdata <- data[sample(nrow(data), 50), ]
#buang data string (yang paling kiri dan kanan)
sampeldata <- newdata[,c(3:8)]
#buat data pca dengan prcomp
data.pca <- prcomp(sampeldata, center = TRUE, scale = TRUE)
#buat plot dari data pca pca dengan biplot
bplot <- ggbiplot (data.pca, choices = c(1,6), obs.scale = 0, var.scale = 0, labels = newdata$manufacturer,
varname.size = 5, varname.abbrev = TRUE, var.axes = TRUE, circle = FALSE)
print (bplot)
#Membaca data
setwd("C:\Users\halid\Dropbox\PC\Downloads")
#Membaca data
setwd("C:\Users\halid\Dropbox\PC\Downloads")
#Membaca data
setwd("C:/Users/halid/Dropbox/PC/Downloads")
data <- read.csv("Country-data.csv")
# Melakukan sampling
ndata <- data[sample(nrow(data), 50),]
# Melakukan penghapusan variabel non-numeric
non_numeric_vars <- sapply(ndata, class) != "numeric"
data_numeric <- ndata[, !non_numeric_vars]
# Melakukan PCA
pca <- prcomp(data_numeric, scale. = TRUE)
# Melakukan analisis biplot
biplot(pca)
View(CountryData)
datalkp <- CountryData[c(2:167), c(2:10)]
CountryData.pca <- prcomp(datalkp, center = TRUE, scale = TRUE)
summary(CountryData.pca)
biplot (CountryData.pca, scale = 0, xlabs = rep(2:167))
